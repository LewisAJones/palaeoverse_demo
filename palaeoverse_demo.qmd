---
title: | 
  Into the palaeoverse
subtitle: |
  A community-driven R package
  
  ![](images/logo.png){fig-align="center" height=150}
author: | 
  [Lewis A. Jones](mailto:LewisAlan.Jones@uvigo.es), Universidade de Vigo
  
  ![](images/mapas.png){fig-align="center" height=80}
  ![](images/erc.png){fig-align="center" height=80}
affiliation: "Universidade de Vigo"
execute:
  echo: true
  eval: true
format: 
  revealjs:
    logo: "/images/logo.png"
    footer: "[palaeoverse: a community-driven R package](https://palaeoverse.org)"
    theme: default
---

## Development team {.smaller}

::: columns
::: {.column width="50%"}
-   [Lewis A. Jones](mailto:LewisAlan.Jones@uvigo.es), Universidade de Vigo
-   [William Gearty](mailto:willgearty@gmail.com), American Museum of Natural History
-   [Bethany J. Allen](mailto:Bethany.Allen@bsse.ethz.ch), ETH Z√ºrich
-   [Kilian Eichenseer](mailto:kilian.eichenseer@gmail.com), Durham University
-   [Christopher D. Dean](christopherdaviddean@gmail.com), University College London
-   [Sof√≠a Galv√°n](mailto:sofia.galvan@uvigo.es), Universidade de Vigo
-   [Miranta Kouvari](mailto:kouvari.miranta@gmail.com), University College London/Natural History Museum
:::

::: {.column width="50%"}
-   [Pedro L. Godoy](mailto:pedrolorenagodoy@gmail.com), University of S√£o Paulo/Stony Brook University
-   [Cecily Nicholl](cecily.nicholl@ucl.ac.uk), University College London
-   [Lucas Buffan](mailto:lucas.buffan@ens-lyon.fr), √âcole Normale Sup√©rieure de Lyon
-   [Erin M. Dillon](mailto:erinmdillon@ucsb.edu), Smithsonian Tropical Research Institute/University of California
-   [Alfio A. Chiarenza](mailto:a.chiarenza15@gmail.com), Universidade de Vigo
:::
:::

## Funders {.smaller}

-   European Union's Horizon 2020 research and innovation program (MAPAS project)
    -   Grant number: 947921
-   The Royal Society
    -   Grant numbers: RF_ERE_210013, RGF_R1_180020, and RGF_EA_180318
-   Juan de la Cierva-formaci√≥n fellowship
    -   FJC2020-044836-I / MCIN /AEI / 10.13039 /501100011033
-   ETH+ Research Grant (BECCY project)
-   FAPESP Postdoctoral fellowship
    -   Grant number: 2022/05697-9
-   Population Biology Program of Excellence Postdoctoral Fellowship (the University of Nebraska-Lincoln)
-   Lerner-Gray Postdoctoral Research Fellowship (American Museum of Natural History)

# Introduction {.smaller}

*The long and the short of it* üìè*...*

## What is Palaeoverse?

<br>

<br>

<center>

*Palaeoverse is a project that aims to **bring the palaeobiology community together.***

![](images/hands.png){fig-align="center" height=150}

</center>

## What is the palaeoverse R package? {.smaller}

<center>
![](images/claddis.jpeg){fig-align="center" height=200}
![](images/divdyn.png){fig-align="center" height=200}

**palaeoverse** provides auxiliary functions to support data preparation and exploration.

![](images/logo.png){fig-align="center" height=200}

*Improve code readability, reusability and reproducibility.*

</center>

## What makes palaeoverse different? {.smaller}

![](images/another-r-package.jpg){fig-align="center" height=500}

## What makes palaeoverse different? {.smaller}

![](images/chris-pratt.jpg){.absolute top="120" right="50" width="450" height="300"}

::: columns
::: {.column width="75%"}
-   **Community-informed development**
    -   Authors (*n* = 13)
    -   Survey participants (*n* = 35)
-   **Well-documented & peer-reviewed code**
    -   Formal review process
:::

::: {.column width="25%"}
:::
:::

<br>

<br>

<center>

### A community-driven package

[http://www.palaeoverse.org](http://www.palaeoverse.org)

</center>

# Functionality

*A whistle-stop tour of palaeoverse* üöã*...*

## What's available? {.smaller}

::: columns
::: {.column width="50%"}
-   `axis_geo`
-   `bin_lat`
-   `bin_time`
-   `data`
-   `group_apply`
-   `lat_bins`
-   `look_up`
-   `palaeorotate`
:::

::: {.column width="50%"}
-   `phylo_check`
-   `tax_check`
-   `tax_expand_lat`
-   `tax_expand_time`
-   `tax_range_space`
-   `tax_range_time`
-   `tax_unique`
-   `time_bins`
:::
:::

## Expected input {.smaller}

A lot of data, a lot of sources, and a lot of unique features.

![](images/gbdb.png){.absolute top="150" left="0" width="150" height="150"} ![](images/pbdb.png){.absolute top="150" left="200" width="150" height="150"} ![](images/pared.png){.absolute top="150" left="400" width="220" height="150"} ![](images/neotoma.png){.absolute top="150" left="630" width="200" height="150"} ![](images/neptune.png){.absolute top="150" left="850" width="200" height="150"}

<br>

<br>

<br>

<br>

<br>

<center>

**Data structure, not source.**

`occdf` $\rightarrow$ `function(x)` $\rightarrow$ `df`

Occurrence dataframe\*

</center>

::: aside
\*Exceptions do exist.
:::

# Getting started

*Let's dive in ü§ø...*

## Installation {.smaller}

**palaeoverse** can be installed from the CRAN using:

```{r, eval = FALSE}
install.packages("palaeoverse")
```

<br>

The development version can be installed using devtools:

```{r, eval = FALSE}
devtools::install_github("palaeoverse-community/palaeoverse")
```

<br>

Once installed, load the package in the usual manner:

```{r}
library(palaeoverse)
```

## Example datasets {.smaller}

Two example occurrence datasets are available.

Carboniferous--Early Triassic tetrapods (*n* = 5270, [Paleobiology Database](https://paleobiodb.org/#/)).

```{r}
#| code-fold: true
#| collapse: true
# Get details on dataset
?tetrapods
# Load dataset
data("tetrapods")
# Available variables
colnames(tetrapods)
```

Phanerozoic reef occurrences (*n* = 4363, [PaleoReefs Database](https://www.paleo-reefs.pal.uni-erlangen.de)).

```{r}
#| code-fold: true
#| collapse: true
# Get details on dataset
?reefs
# Load dataset
data("reefs")
# Available variables
colnames(reefs)
```

## Reference datasets {.smaller}

Two reference datasets are available.

Geological Time Scale 2012 & 2020 (Gradstein et al. 2012, 2020).

```{r}
#| code-fold: true
#| collapse: true
# Get details on dataset
?GTS2012
?GTS2020
# Load dataset
data("GTS2012")
data("GTS2020")
# Increase output width
options(width = 120)
# Print first few rows
head(GTS2012, n = 3)
head(GTS2020, n = 3)
```

## Stratigraphic time bins {.smaller}

```{r}
#| collapse: true
#| fig-width: 8
#| fig-align: center
# Get stage-level time bins
bins <- time_bins(interval = "Phanerozoic", rank = "stage", plot = TRUE)
```

```{r}
#| collapse: true
# Get first few rows
head(bins, n = 3)
```

## Near-equal-length time bins {.smaller}

```{r}
#| collapse: true
#| fig-width: 9
#| fig-align: center
# Get stage-level time bins
bins <- time_bins(interval = "Phanerozoic", rank = "stage", size = 15, plot = TRUE)
```

```{r}
#| collapse: true
# Get first few rows
head(bins, n = 3)
```

## Temporal occurrence binning {.smaller}

Five temporal binning methods for age range data:

```{r}
#| code-fold: true
#| collapse: true
# Use tetrapod example data
occdf <- tetrapods

# Get stage-level time bins
bins <- time_bins(interval = "Phanerozoic", rank = "stage")

# Assign via midpoint age of fossil occurrence data
ex1 <- bin_time(occdf = occdf, bins = bins, method = "mid")

# Assign to all bins that age range covers
ex2 <- bin_time(occdf = occdf, bins = bins, method = "all")

# Assign via majority overlap based on fossil occurrence age range
ex3 <- bin_time(occdf = occdf, bins = bins, method = "majority")

# Randomly assign to overlapping bins based on fossil occurrence age range
ex4 <- bin_time(occdf = occdf, bins = bins, method = "random", reps = 10)

# Randomly assign point estimates (uniform distribution) based on fossil occurrence age range
ex5 <- bin_time(occdf = occdf, bins = bins, method = "point", reps = 10)
```

## Latitudinal occurrence binning {.smaller}

Generate and bin latitudinal data:

```{r}
#| collapse: true
#| fig-width: 8
#| fig-align: center
# Generate latitudinal bins
bins <- lat_bins(size = 10, plot = TRUE)
```

```{r}
#| collapse: true
# Use reef example data
occdf <- reefs
# Bin occurrences
occdf <- bin_lat(occdf = occdf, bins = bins, lat = "lat")
```

## Spatial occurrence binning {.smaller}

Generate and bin spatial data:

```{r}
#| collapse: true
#| fig-width: 8
#| fig-align: center
# Get reef data
occdf <- reefs[1:500, ]
# Bin data using a hexagonal equal-area grid
occdf <- bin_space(occdf = occdf, spacing = 250, plot = TRUE)
```

## Palaeogeographic reconstruction {.smaller}

Palaeorotate fossil occurrences (eight models available):

```{r}
#| code-fold: true
#| collapse: true
# Example with a few occurrences
occdf <- data.frame(lng = c(2, -103, -66),
                    lat = c(46, 35, -7),
                    age = c(88, 125, 200))

# Estimate palaeocoordinates using the GPlates API
ex1 <- palaeorotate(occdf = occdf, method = "point")

# Estimate palaeocoordinates using reconstruction files
ex2 <- palaeorotate(occdf = occdf, method = "grid")

# Estimate palaeocoordinates and uncertainty using reconstruction files
ex3 <- palaeorotate(occdf = occdf, method = "grid", uncertainty = TRUE)

# Increase output width
options(width = 400)
# Get first few rows
head(ex3)
```

## Taxonomic spell check {.smaller}

Identify and count potential spelling variations of the same taxon:

```{r}
#| code-fold: true
#| collapse: true
# load occurrence data
data("tetrapods")
# Check taxon names alphabetically
ex1 <- tax_check(taxdf = tetrapods, name = "genus", dis = 0.05, verbose = FALSE)
# Get first few rows
head(ex1)
```

```{r}
#| code-fold: true
#| collapse: true
# Check taxon names by group
ex2 <- tax_check(taxdf = tetrapods, name = "genus", group = "family", dis = 0.05, verbose = FALSE)
# Get first few rows
head(ex2)
```

In this example dataset:

-   Dinosaurus belongs to the Phthinosuchidae
-   Dvinosaurus belongs to the Dvinosauridae
-   Varanops belongs to the Varanopidae
-   Varanopus belongs to the Captorhinidae

## Unique taxa {.smaller}

Identifying unique taxa:

```{r}
#| code-fold: true
#| collapse: true
# Create dataframe
occdf <- data.frame(species = c("rex", "aegyptiacus", NA),
                    genus = c("Tyrannosaurus", "Spinosaurus", NA),
                    family = c("Tyrannosauridae", "Spinosauridae", "Diplodocidae"))
# Retain unique taxa
dinosaur_species <- tax_unique(occdf = occdf,
                               species = "species",
                               genus = "genus",
                               family = "family",
                               resolution = "species")
head(dinosaur_species)
```

## Temporal range {.smaller}

Calculate and plot temporal range of taxa:

```{r}
#| collapse: true
#| fig-width: 8
#| fig-align: center
# Grab tetrapod data
occdf <- tetrapods
# Remove NAs
occdf <- subset(occdf, !is.na(order))
# Temporal range
ex <- tax_range_time(occdf = occdf, name = "order", plot = TRUE)
```

## Geographic range {.smaller}

Four approaches to calculate geographic range of taxa:

```{r}
#| code-fold: true
#| collapse: true
# Grab internal data
occdf <- tetrapods
# Remove NAs
occdf <- subset(occdf, !is.na(genus))
# Convex hull
ex1 <- tax_range_space(occdf = occdf, name = "genus", method = "con")
# Latitudinal range
ex2 <- tax_range_space(occdf = occdf, name = "genus", method = "lat")
# Great Circle Distance
ex3 <- tax_range_space(occdf = occdf, name = "genus", method = "gcd")
# Occupied grid cells
ex4 <- tax_range_space(occdf = occdf, name = "genus", method = "occ", spacing = 250)
# See first few rows
head(ex2)
```

## Temporal pseudo-occurrences {.smaller}

Convert range data to bin-level pseudo-occurrences:

```{r}
#| code-fold: true
#| collapse: true
# Generate example df
taxdf <- data.frame(name = c("A", "B", "C"),
                    max_age = c(150, 60, 30),
                    min_age = c(110, 20, 0))
# Generate pseudo-occurrences
ex1 <- tax_expand_time(taxdf, max_ma = "max_age", min_ma = "min_age")
# Increase output width
options(width = 200)
# See first few rows
head(ex1)
```

## Latitudinal pseudo-occurrences {.smaller}

Convert range data to bin-level pseudo-occurrences:

```{r}
#| code-fold: true
#| collapse: true
# Generate latitudinal bins
bins <- lat_bins()
# Generate example df
taxdf <- data.frame(name = c("A", "B", "C"),
                    max_lat = c(60, 20, -10),
                    min_lat = c(20, -40, -60))
# Generate pseudo-occurrences
ex2 <- tax_expand_lat(taxdf = taxdf, bins = bins)
# See first few rows
head(ex2)
```

## Phylogeny wrangling {.smaller}

Compare a list of taxonomic names to tip names in a user-provided phylogeny:

::: columns
::: {.column width="40%"}
```{r}
#| code-fold: true
#| collapse: true
#| fig-width: 8
# Read in example tree of ceratopsians
# from paleotree
library(paleotree)
data(RaiaCopesRule)
# Set smaller margins for plotting
par(mar = rep(0, 4))
# Plot tree
plot(ceratopsianTreeRaia)
```
:::

::: {.column width="60%"}
```{r}
#| code-fold: true
#| collapse: true
# Specify list of names
dinosaurs <- c("Nasutoceratops_titusi", 
               "Diabloceratops_eatoni",
               "Zuniceratops_christopheri",
               "Psittacosaurus_major")

# Table of taxon names in list, tree or both
ex1 <- phylo_check(tree = ceratopsianTreeRaia,
                   list = dinosaurs)
# Get first few rows
head(ex1)
```
:::
:::

## Interval linking {.smaller}

Link and match interval names to the Geological Time Scale:

```{r}
#| code-fold: true
#| collapse: true
## Link numeric age values
# create exemplary df
taxdf <- data.frame(name = c("A", "B", "C"),
                    early_interval = c("Maastrichtian",
                                       "Campanian",
                                       "Sinemurian"),
                    late_interval = c("Maastrichtian",
                                      "Campanian",
                                      "Bartonian"))
# assign stages and numerical ages
taxdf <- look_up(taxdf)

## Use exemplary int_key
# Get internal reef data
occdf <- reefs
# Get internal interval key
int_key <- interval_key
# assign stages and numerical ages
occdf <- look_up(occdf,
                early_interval = "interval",
                late_interval = "interval",
                int_key = int_key)
```

## Plotting {.smaller}

Add Geological Time Scale to plots:

```{r}
#| collapse: true
#| fig-width: 7
#| fig-align: center
# Plot data
plot(x = 541:0,
     xlab = "Time (Ma)", ylab = "User-variable",
     xlim = c(541, 0), xaxt = "n", type = "l", lwd = 5)

# Add Geological Time Scale
axis_geo(side = 1, intervals = "periods")
```

## Wrapper {.smaller}

Run functions over groups of data:

```{r}
#| code-fold: true
#| collapse: true
# Get tetrapod data
occdf <- tetrapods

# Count number of occurrences from each country
ex1 <- group_apply(occdf = occdf, group = "cc", fun = nrow)

# Remove NA data
occdf <- subset(occdf, !is.na(genus))

# Unique genera per collection with group_apply and input arguments
ex2 <- group_apply(occdf = occdf,
                     group = c("collection_no"),
                     fun = tax_unique,
                     genus = "genus",
                     family = "family",
                     order = "order",
                     class = "class",
                     resolution = "genus")

# Use multiple variables (number of occurrences per collection & formation)
ex3 <- group_apply(occdf = occdf,
                   group = c("collection_no", "formation"),
                   fun = nrow)
```

# What's next? {.smaller}

*Onwards and upwards* üèîÔ∏è*...*

## What's next? {.smaller}

![](images/delorean.png){.absolute top="50" right="50" width="450" height="450"}

- Workshops
- Hackathon
- Palaeobiology CRAN Task View
- Shiny App
- Meetings
- Funding

## Thank-you / Merci / Gracias / Danke / Obrigado / Grazie / ŒïœÖœáŒ±œÅŒπœÉœÑœé {.smaller}

![](images/logo.png){fig-align="center" height=150}

::: columns
::: {.column width="50%"}
-   **Website**: General information
    - [https://palaeoverse.org](https://palaeoverse.org)
-   **Twitter**: News and updates
    -   [\@ThePalaeoverse](https://twitter.com/ThePalaeoverse)
-   **Google Group**: A community space
    -   [https://groups.google.com/g/palaeoverse](https://groups.google.com/g/palaeoverse)
:::

::: {.column width="50%"}
- **Point of contact**: General contact
    - [LewisAlan.Jones@uvigo.es](mailto:LewisAlan.Jones@uvigo.es)
- **Preprint**: Available now!
    - [https://doi.org/10.31223/X5Z94Q](https://doi.org/10.31223/X5Z94Q)
:::
:::

